consumes:
- application/json
definitions:
  models.Review:
    properties:
      reviewer:
        $ref: '#/definitions/models.ShortUserData'
      text:
        example: This is a nice review
        type: string
    type: object
  models.ShortUserData:
    properties:
      avatar:
        example: https://my-avatar.com
        type: string
      name:
        example: John Doe
        type: string
    type: object
  models.SiteDetail:
    properties:
      address:
        example: 234, Lagos, Nigeria
        type: string
      email:
        example: johndoe@email.com
        type: string
      fb:
        example: https://facebook.com
        type: string
      ig:
        example: https://instagram.com
        type: string
      name:
        type: string
      phone:
        example: "+2348133831036"
        type: string
      tw:
        example: https://twitter.com
        type: string
      wh:
        example: https://wa.me/2348133831036
        type: string
    type: object
  models.Subscriber:
    properties:
      email:
        example: johndoe@email.com
        minLength: 5
        type: string
    required:
    - email
    type: object
  models.User:
    properties:
      email:
        example: johndoe@email.com
        minLength: 5
        type: string
      first_name:
        example: John
        maxLength: 50
        type: string
      last_name:
        example: Doe
        maxLength: 50
        type: string
      password:
        example: strongpassword
        maxLength: 50
        minLength: 8
        type: string
      terms_agreement:
        type: boolean
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  schemas.EmailRequestSchema:
    properties:
      email:
        example: johndoe@email.com
        minLength: 5
        type: string
    required:
    - email
    type: object
  schemas.RegisterResponseSchema:
    properties:
      data:
        $ref: '#/definitions/schemas.EmailRequestSchema'
      message:
        type: string
      status:
        type: string
    type: object
  schemas.ResponseSchema:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  schemas.ReviewsResponseSchema:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Review'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  schemas.SiteDetailResponseSchema:
    properties:
      data:
        $ref: '#/definitions/models.SiteDetail'
      message:
        type: string
      status:
        type: string
    type: object
  schemas.SubscriberResponseSchema:
    properties:
      data:
        $ref: '#/definitions/models.Subscriber'
      message:
        type: string
      status:
        type: string
    type: object
  schemas.VerifyEmailRequestSchema:
    properties:
      email:
        example: johndoe@example.com
        minLength: 5
        type: string
      otp:
        example: 123456
        type: integer
    required:
    - email
    - otp
    type: object
  utils.ErrorResponse:
    properties:
      data:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: A simple bidding API built with Fiber
  title: Bidout Auction API
  version: "7.0"
paths:
  /api/v7/auth/register:
    post:
      description: This endpoint registers new users into our application.
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.RegisterResponseSchema'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /api/v7/auth/resend-verification-email:
    post:
      description: This endpoint verifies a user's email.
      parameters:
      - description: Email object
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/schemas.EmailRequestSchema'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ResponseSchema'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Verify a user's email
      tags:
      - Auth
  /api/v7/auth/verify-email:
    post:
      description: This endpoint verifies a user's email.
      parameters:
      - description: Verify Email object
        in: body
        name: verify_email
        required: true
        schema:
          $ref: '#/definitions/schemas.VerifyEmailRequestSchema'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ResponseSchema'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Verify a user's email
      tags:
      - Auth
  /api/v7/general/reviews:
    get:
      description: This endpoint retrieves a few reviews of the application.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.ReviewsResponseSchema'
      summary: Retrieve site reviews
      tags:
      - General
  /api/v7/general/site-detail:
    get:
      description: This endpoint retrieves few details of the site/application.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SiteDetailResponseSchema'
      summary: Retrieve site details
      tags:
      - General
  /api/v7/general/subscribe:
    post:
      description: This endpoint creates a newsletter subscriber in our application
      parameters:
      - description: Subscriber object
        in: body
        name: subscriber
        required: true
        schema:
          $ref: '#/definitions/models.Subscriber'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemas.SubscriberResponseSchema'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Add a subscriber
      tags:
      - General
produces:
- application/json
swagger: "2.0"
